# Generated by Django 5.2b1 on 2025-03-16 10:31

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0002_rezerwations_participants_count'),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Tytuł wydarzenia')),
                ('start_datetime', models.DateTimeField(verbose_name='Data i czas rozpoczęcia')),
                ('end_datetime', models.DateTimeField(verbose_name='Data i czas zakończenia')),
                ('max_participants', models.PositiveIntegerField(default=20, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Maksymalna liczba uczestników')),
                ('description', models.TextField(blank=True, verbose_name='Opis wydarzenia')),
                ('main_image', models.ImageField(blank=True, help_text='Główne zdjęcie przedstawiające wydarzenie. Dodatkowe zdjęcia można dodać po utworzeniu wydarzenia.', null=True, upload_to='event_main_images/', verbose_name='Główne zdjęcie wydarzenia')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data aktualizacji')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywne')),
            ],
            options={
                'verbose_name': 'Wydarzenie',
                'verbose_name_plural': 'Wydarzenia',
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa typu')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
                ('slug', models.SlugField(unique=True, verbose_name='Identyfikator')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywny')),
            ],
            options={
                'verbose_name': 'Typ wydarzenia',
                'verbose_name_plural': 'Typy wydarzeń',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa miejsca')),
                ('address', models.CharField(max_length=255, verbose_name='Adres')),
                ('city', models.CharField(max_length=100, verbose_name='Miasto')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Kod pocztowy')),
                ('additional_info', models.TextField(blank=True, verbose_name='Dodatkowe informacje')),
                ('map_iframe', models.TextField(blank=True, help_text='Wklej tutaj kod iframe z Google Maps dla tego miejsca. Kod powinien zaczynać się od <iframe> i kończyć </iframe>.', verbose_name='Kod mapy Google')),
            ],
            options={
                'verbose_name': 'Miejsce',
                'verbose_name_plural': 'Miejsca',
            },
        ),
        migrations.AlterField(
            model_name='rezerwations',
            name='participants_count',
            field=models.PositiveIntegerField(default=1, help_text='Podaj liczbę osób biorących udział w spotkaniu.', validators=[django.core.validators.MinValueValidator(1, 'Liczba uczestników musi wynosić co najmniej 1'), django.core.validators.MaxValueValidator(100, 'Maksymalna liczba uczestników to 100')], verbose_name='Liczba uczestników'),
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='event_images/', verbose_name='Zdjęcie')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Podpis')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Kolejność')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='events.events', verbose_name='Wydarzenie')),
            ],
            options={
                'verbose_name': 'Zdjęcie wydarzenia',
                'verbose_name_plural': 'Zdjęcia wydarzeń',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.AddField(
            model_name='rezerwations',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='events.events', verbose_name='Wydarzenie'),
        ),
        migrations.AddField(
            model_name='events',
            name='type_of_events',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='events.eventtype', verbose_name='Typ wydarzenia'),
        ),
        migrations.AddField(
            model_name='events',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='events.venue', verbose_name='Miejsce'),
        ),
    ]
